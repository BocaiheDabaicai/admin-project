// mock/user.bundled_2xe2rd2pnh8.mjs
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "111111",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "111111",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/api/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/api/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      console.log(request.headers);
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
export {
  user_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay9tb2NrL3VzZXIudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiQzpcXFxcVXNlcnNcXFxcXHU2NjUyc2Vuc2VpXHU3Njg0c3VwdXRlclxcXFxEZXNrdG9wXFxcXFByb2dyYW1taW5nblxcXFxhZG1pbi1wcm9qZWN0XFxcXG1vY2tcXFxcdXNlci50c1wiO2NvbnN0IF9faW5qZWN0ZWRfZGlybmFtZV9fID0gXCJDOlxcXFxVc2Vyc1xcXFxcdTY2NTJzZW5zZWlcdTc2ODRzdXB1dGVyXFxcXERlc2t0b3BcXFxcUHJvZ3JhbW1pbmduXFxcXGFkbWluLXByb2plY3RcXFxcbW9ja1wiO2NvbnN0IF9faW5qZWN0ZWRfaW1wb3J0X21ldGFfdXJsX18gPSBcImZpbGU6Ly8vQzovVXNlcnMvJUU2JTk5JTkyc2Vuc2VpJUU3JTlBJTg0c3VwdXRlci9EZXNrdG9wL1Byb2dyYW1taW5nbi9hZG1pbi1wcm9qZWN0L21vY2svdXNlci50c1wiO2Z1bmN0aW9uIGNyZWF0ZVVzZXJMaXN0KCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHVzZXJJZDogMSxcclxuICAgICAgICAgICAgYXZhdGFyOlxyXG4gICAgICAgICAgICAgICAgJ2h0dHBzOi8vd3BpbWcud2FsbHN0Y24uY29tL2Y3Nzg3MzhjLWU0ZjgtNDg3MC1iNjM0LTU2NzAzYjRhY2FmZS5naWYnLFxyXG4gICAgICAgICAgICB1c2VybmFtZTogJ2FkbWluJyxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6ICcxMTExMTEnLFxyXG4gICAgICAgICAgICBkZXNjOiAnXHU1RTczXHU1M0YwXHU3QkExXHU3NDA2XHU1NDU4JyxcclxuICAgICAgICAgICAgcm9sZXM6IFsnXHU1RTczXHU1M0YwXHU3QkExXHU3NDA2XHU1NDU4J10sXHJcbiAgICAgICAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJ10sXHJcbiAgICAgICAgICAgIHJvdXRlczogWydob21lJ10sXHJcbiAgICAgICAgICAgIHRva2VuOiAnQWRtaW4gVG9rZW4nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB1c2VySWQ6IDIsXHJcbiAgICAgICAgICAgIGF2YXRhcjpcclxuICAgICAgICAgICAgICAgICdodHRwczovL3dwaW1nLndhbGxzdGNuLmNvbS9mNzc4NzM4Yy1lNGY4LTQ4NzAtYjYzNC01NjcwM2I0YWNhZmUuZ2lmJyxcclxuICAgICAgICAgICAgdXNlcm5hbWU6ICdzeXN0ZW0nLFxyXG4gICAgICAgICAgICBwYXNzd29yZDogJzExMTExMScsXHJcbiAgICAgICAgICAgIGRlc2M6ICdcdTdDRkJcdTdFREZcdTdCQTFcdTc0MDZcdTU0NTgnLFxyXG4gICAgICAgICAgICByb2xlczogWydcdTdDRkJcdTdFREZcdTdCQTFcdTc0MDZcdTU0NTgnXSxcclxuICAgICAgICAgICAgYnV0dG9uczogWydjdXNlci5kZXRhaWwnLCAnY3VzZXIudXNlciddLFxyXG4gICAgICAgICAgICByb3V0ZXM6IFsnaG9tZSddLFxyXG4gICAgICAgICAgICB0b2tlbjogJ1N5c3RlbSBUb2tlbicsXHJcbiAgICAgICAgfSxcclxuICAgIF1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgW1xyXG4gICAgLy8gXHU3NTI4XHU2MjM3XHU3NjdCXHU1RjU1XHU2M0E1XHU1M0UzXHJcbiAgICB7XHJcbiAgICAgICAgdXJsOiAnL2FwaS91c2VyL2xvZ2luJywvL1x1OEJGN1x1NkM0Mlx1NTczMFx1NTc0MFxyXG4gICAgICAgIG1ldGhvZDogJ3Bvc3QnLC8vXHU4QkY3XHU2QzQyXHU2NUI5XHU1RjBGXHJcbiAgICAgICAgcmVzcG9uc2U6ICh7Ym9keX0pID0+IHtcclxuICAgICAgICAgICAgLy9cdTgzQjdcdTUzRDZcdThCRjdcdTZDNDJcdTRGNTNcdTY0M0FcdTVFMjZcdThGQzdcdTY3NjVcdTc2ODRcdTc1MjhcdTYyMzdcdTU0MERcdTRFMEVcdTVCQzZcdTc4MDFcclxuICAgICAgICAgICAgY29uc3Qge3VzZXJuYW1lLCBwYXNzd29yZH0gPSBib2R5O1xyXG4gICAgICAgICAgICAvL1x1OEMwM1x1NzUyOFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTFGRFx1NjU3MCxcdTc1MjhcdTRFOEVcdTUyMjRcdTY1QURcdTY2MkZcdTU0MjZcdTY3MDlcdTZCNjRcdTc1MjhcdTYyMzdcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tVc2VyID0gY3JlYXRlVXNlckxpc3QoKS5maW5kKFxyXG4gICAgICAgICAgICAgICAgKGl0ZW0pID0+IGl0ZW0udXNlcm5hbWUgPT09IHVzZXJuYW1lICYmIGl0ZW0ucGFzc3dvcmQgPT09IHBhc3N3b3JkLFxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICAgIC8vXHU2Q0ExXHU2NzA5XHU3NTI4XHU2MjM3XHU4RkQ0XHU1NkRFXHU1OTMxXHU4RDI1XHU0RkUxXHU2MDZGXHJcbiAgICAgICAgICAgIGlmICghY2hlY2tVc2VyKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge2NvZGU6IDIwMSwgZGF0YToge21lc3NhZ2U6ICdcdThEMjZcdTUzRjdcdTYyMTZcdTgwMDVcdTVCQzZcdTc4MDFcdTRFMERcdTZCNjNcdTc4NkUnfX1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvL1x1NTk4Mlx1Njc5Q1x1NjcwOVx1OEZENFx1NTZERVx1NjIxMFx1NTI5Rlx1NEZFMVx1NjA2RlxyXG4gICAgICAgICAgICBjb25zdCB7dG9rZW59ID0gY2hlY2tVc2VyXHJcbiAgICAgICAgICAgIHJldHVybiB7Y29kZTogMjAwLCBkYXRhOiB7dG9rZW59fVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgLy8gXHU4M0I3XHU1M0Q2XHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHJcbiAgICB7XHJcbiAgICAgICAgdXJsOiAnL2FwaS91c2VyL2luZm8nLFxyXG4gICAgICAgIG1ldGhvZDogJ2dldCcsXHJcbiAgICAgICAgcmVzcG9uc2U6IChyZXF1ZXN0KSA9PiB7XHJcbiAgICAgICAgICAgIC8vXHU4M0I3XHU1M0Q2XHU4QkY3XHU2QzQyXHU1OTM0XHU2NDNBXHU1RTI2dG9rZW5cclxuICAgICAgICAgICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmhlYWRlcnMudG9rZW47XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcXVlc3QuaGVhZGVycylcclxuICAgICAgICAgICAgLy9cdTY3RTVcdTc3MEJcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTY2MkZcdTU0MjZcdTUzMDVcdTU0MkJcdTY3MDlcdTZCNjR0b2tlblx1NzUyOFx1NjIzN1xyXG4gICAgICAgICAgICBjb25zdCBjaGVja1VzZXIgPSBjcmVhdGVVc2VyTGlzdCgpLmZpbmQoKGl0ZW0pID0+IGl0ZW0udG9rZW4gPT09IHRva2VuKVxyXG4gICAgICAgICAgICAvL1x1NkNBMVx1NjcwOVx1OEZENFx1NTZERVx1NTkzMVx1OEQyNVx1NzY4NFx1NEZFMVx1NjA2RlxyXG4gICAgICAgICAgICBpZiAoIWNoZWNrVXNlcikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtjb2RlOiAyMDEsIGRhdGE6IHttZXNzYWdlOiAnXHU4M0I3XHU1M0Q2XHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU1OTMxXHU4RDI1J319XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9cdTU5ODJcdTY3OUNcdTY3MDlcdThGRDRcdTU2REVcdTYyMTBcdTUyOUZcdTRGRTFcdTYwNkZcclxuICAgICAgICAgICAgcmV0dXJuIHtjb2RlOiAyMDAsIGRhdGE6IHtjaGVja1VzZXJ9fVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5dIl0sCiAgIm1hcHBpbmdzIjogIjtBQUE4VixTQUFTLGlCQUFpQjtBQUNwWCxTQUFPO0lBQ0g7TUFDSSxRQUFRO01BQ1IsUUFDSTtNQUNKLFVBQVU7TUFDVixVQUFVO01BQ1YsTUFBTTtNQUNOLE9BQU8sQ0FBQyxnQ0FBTztNQUNmLFNBQVMsQ0FBQyxjQUFjO01BQ3hCLFFBQVEsQ0FBQyxNQUFNO01BQ2YsT0FBTztJQUNYO0lBQ0E7TUFDSSxRQUFRO01BQ1IsUUFDSTtNQUNKLFVBQVU7TUFDVixVQUFVO01BQ1YsTUFBTTtNQUNOLE9BQU8sQ0FBQyxnQ0FBTztNQUNmLFNBQVMsQ0FBQyxnQkFBZ0IsWUFBWTtNQUN0QyxRQUFRLENBQUMsTUFBTTtNQUNmLE9BQU87SUFDWDtFQUNKO0FBQ0o7QUFFQSxJQUFPLGVBQVE7O0VBRVg7SUFDSSxLQUFLOztJQUNMLFFBQVE7O0lBQ1IsVUFBVSxDQUFDLEVBQUMsS0FBSSxNQUFNO0FBRWxCLFlBQU0sRUFBQyxVQUFVLFNBQVEsSUFBSTtBQUU3QixZQUFNLFlBQVksZUFBZSxFQUFFO1FBQy9CLENBQUMsU0FBUyxLQUFLLGFBQWEsWUFBWSxLQUFLLGFBQWE7TUFDOUQ7QUFFQSxVQUFJLENBQUMsV0FBVztBQUNaLGVBQU8sRUFBQyxNQUFNLEtBQUssTUFBTSxFQUFDLFNBQVMseURBQVcsRUFBQztNQUNuRDtBQUVBLFlBQU0sRUFBQyxNQUFLLElBQUk7QUFDaEIsYUFBTyxFQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUMsTUFBSyxFQUFDO0lBQ3BDO0VBQ0o7O0VBRUE7SUFDSSxLQUFLO0lBQ0wsUUFBUTtJQUNSLFVBQVUsQ0FBQyxZQUFZO0FBRW5CLFlBQU0sUUFBUSxRQUFRLFFBQVE7QUFDOUIsY0FBUSxJQUFJLFFBQVEsT0FBTztBQUUzQixZQUFNLFlBQVksZUFBZSxFQUFFLEtBQUssQ0FBQyxTQUFTLEtBQUssVUFBVSxLQUFLO0FBRXRFLFVBQUksQ0FBQyxXQUFXO0FBQ1osZUFBTyxFQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUMsU0FBUyxtREFBVSxFQUFDO01BQ2xEO0FBRUEsYUFBTyxFQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUMsVUFBUyxFQUFDO0lBQ3hDO0VBQ0o7QUFDSjsiLAogICJuYW1lcyI6IFtdCn0K
