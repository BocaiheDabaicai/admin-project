// mock/user.ts
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "111111",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "111111",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/api/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/api/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      console.log(request.headers);
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
export {
  user_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay91c2VyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkM6XFxcXFVzZXJzXFxcXFx1NjY1MnNlbnNlaVx1NzY4NHN1cHV0ZXJcXFxcRGVza3RvcFxcXFxQcm9ncmFtbWluZ25cXFxcYWRtaW4tcHJvamVjdFxcXFxtb2NrXFxcXHVzZXIudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiQzpcXFxcVXNlcnNcXFxcXHU2NjUyc2Vuc2VpXHU3Njg0c3VwdXRlclxcXFxEZXNrdG9wXFxcXFByb2dyYW1taW5nblxcXFxhZG1pbi1wcm9qZWN0XFxcXG1vY2tcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0M6L1VzZXJzLyVFNiU5OSU5MnNlbnNlaSVFNyU5QSU4NHN1cHV0ZXIvRGVza3RvcC9Qcm9ncmFtbWluZ24vYWRtaW4tcHJvamVjdC9tb2NrL3VzZXIudHNcIjtmdW5jdGlvbiBjcmVhdGVVc2VyTGlzdCgpIHtcclxuICAgIHJldHVybiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB1c2VySWQ6IDEsXHJcbiAgICAgICAgICAgIGF2YXRhcjpcclxuICAgICAgICAgICAgICAgICdodHRwczovL3dwaW1nLndhbGxzdGNuLmNvbS9mNzc4NzM4Yy1lNGY4LTQ4NzAtYjYzNC01NjcwM2I0YWNhZmUuZ2lmJyxcclxuICAgICAgICAgICAgdXNlcm5hbWU6ICdhZG1pbicsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnMTExMTExJyxcclxuICAgICAgICAgICAgZGVzYzogJ1x1NUU3M1x1NTNGMFx1N0JBMVx1NzQwNlx1NTQ1OCcsXHJcbiAgICAgICAgICAgIHJvbGVzOiBbJ1x1NUU3M1x1NTNGMFx1N0JBMVx1NzQwNlx1NTQ1OCddLFxyXG4gICAgICAgICAgICBidXR0b25zOiBbJ2N1c2VyLmRldGFpbCddLFxyXG4gICAgICAgICAgICByb3V0ZXM6IFsnaG9tZSddLFxyXG4gICAgICAgICAgICB0b2tlbjogJ0FkbWluIFRva2VuJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdXNlcklkOiAyLFxyXG4gICAgICAgICAgICBhdmF0YXI6XHJcbiAgICAgICAgICAgICAgICAnaHR0cHM6Ly93cGltZy53YWxsc3Rjbi5jb20vZjc3ODczOGMtZTRmOC00ODcwLWI2MzQtNTY3MDNiNGFjYWZlLmdpZicsXHJcbiAgICAgICAgICAgIHVzZXJuYW1lOiAnc3lzdGVtJyxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6ICcxMTExMTEnLFxyXG4gICAgICAgICAgICBkZXNjOiAnXHU3Q0ZCXHU3RURGXHU3QkExXHU3NDA2XHU1NDU4JyxcclxuICAgICAgICAgICAgcm9sZXM6IFsnXHU3Q0ZCXHU3RURGXHU3QkExXHU3NDA2XHU1NDU4J10sXHJcbiAgICAgICAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJywgJ2N1c2VyLnVzZXInXSxcclxuICAgICAgICAgICAgcm91dGVzOiBbJ2hvbWUnXSxcclxuICAgICAgICAgICAgdG9rZW46ICdTeXN0ZW0gVG9rZW4nLFxyXG4gICAgICAgIH0sXHJcbiAgICBdXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICAgIC8vIFx1NzUyOFx1NjIzN1x1NzY3Qlx1NUY1NVx1NjNBNVx1NTNFM1xyXG4gICAge1xyXG4gICAgICAgIHVybDogJy9hcGkvdXNlci9sb2dpbicsLy9cdThCRjdcdTZDNDJcdTU3MzBcdTU3NDBcclxuICAgICAgICBtZXRob2Q6ICdwb3N0JywvL1x1OEJGN1x1NkM0Mlx1NjVCOVx1NUYwRlxyXG4gICAgICAgIHJlc3BvbnNlOiAoe2JvZHl9KSA9PiB7XHJcbiAgICAgICAgICAgIC8vXHU4M0I3XHU1M0Q2XHU4QkY3XHU2QzQyXHU0RjUzXHU2NDNBXHU1RTI2XHU4RkM3XHU2NzY1XHU3Njg0XHU3NTI4XHU2MjM3XHU1NDBEXHU0RTBFXHU1QkM2XHU3ODAxXHJcbiAgICAgICAgICAgIGNvbnN0IHt1c2VybmFtZSwgcGFzc3dvcmR9ID0gYm9keTtcclxuICAgICAgICAgICAgLy9cdThDMDNcdTc1MjhcdTgzQjdcdTUzRDZcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTUxRkRcdTY1NzAsXHU3NTI4XHU0RThFXHU1MjI0XHU2NUFEXHU2NjJGXHU1NDI2XHU2NzA5XHU2QjY0XHU3NTI4XHU2MjM3XHJcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrVXNlciA9IGNyZWF0ZVVzZXJMaXN0KCkuZmluZChcclxuICAgICAgICAgICAgICAgIChpdGVtKSA9PiBpdGVtLnVzZXJuYW1lID09PSB1c2VybmFtZSAmJiBpdGVtLnBhc3N3b3JkID09PSBwYXNzd29yZCxcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAvL1x1NkNBMVx1NjcwOVx1NzUyOFx1NjIzN1x1OEZENFx1NTZERVx1NTkzMVx1OEQyNVx1NEZFMVx1NjA2RlxyXG4gICAgICAgICAgICBpZiAoIWNoZWNrVXNlcikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtjb2RlOiAyMDEsIGRhdGE6IHttZXNzYWdlOiAnXHU4RDI2XHU1M0Y3XHU2MjE2XHU4MDA1XHU1QkM2XHU3ODAxXHU0RTBEXHU2QjYzXHU3ODZFJ319XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy9cdTU5ODJcdTY3OUNcdTY3MDlcdThGRDRcdTU2REVcdTYyMTBcdTUyOUZcdTRGRTFcdTYwNkZcclxuICAgICAgICAgICAgY29uc3Qge3Rva2VufSA9IGNoZWNrVXNlclxyXG4gICAgICAgICAgICByZXR1cm4ge2NvZGU6IDIwMCwgZGF0YToge3Rva2VufX1cclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuICAgIC8vIFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2RlxyXG4gICAge1xyXG4gICAgICAgIHVybDogJy9hcGkvdXNlci9pbmZvJyxcclxuICAgICAgICBtZXRob2Q6ICdnZXQnLFxyXG4gICAgICAgIHJlc3BvbnNlOiAocmVxdWVzdCkgPT4ge1xyXG4gICAgICAgICAgICAvL1x1ODNCN1x1NTNENlx1OEJGN1x1NkM0Mlx1NTkzNFx1NjQzQVx1NUUyNnRva2VuXHJcbiAgICAgICAgICAgIGNvbnN0IHRva2VuID0gcmVxdWVzdC5oZWFkZXJzLnRva2VuO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXF1ZXN0LmhlYWRlcnMpXHJcbiAgICAgICAgICAgIC8vXHU2N0U1XHU3NzBCXHU3NTI4XHU2MjM3XHU0RkUxXHU2MDZGXHU2NjJGXHU1NDI2XHU1MzA1XHU1NDJCXHU2NzA5XHU2QjY0dG9rZW5cdTc1MjhcdTYyMzdcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tVc2VyID0gY3JlYXRlVXNlckxpc3QoKS5maW5kKChpdGVtKSA9PiBpdGVtLnRva2VuID09PSB0b2tlbilcclxuICAgICAgICAgICAgLy9cdTZDQTFcdTY3MDlcdThGRDRcdTU2REVcdTU5MzFcdThEMjVcdTc2ODRcdTRGRTFcdTYwNkZcclxuICAgICAgICAgICAgaWYgKCFjaGVja1VzZXIpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7Y29kZTogMjAxLCBkYXRhOiB7bWVzc2FnZTogJ1x1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTkzMVx1OEQyNSd9fVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vXHU1OTgyXHU2NzlDXHU2NzA5XHU4RkQ0XHU1NkRFXHU2MjEwXHU1MjlGXHU0RkUxXHU2MDZGXHJcbiAgICAgICAgICAgIHJldHVybiB7Y29kZTogMjAwLCBkYXRhOiB7Y2hlY2tVc2VyfX1cclxuICAgICAgICB9LFxyXG4gICAgfSxcclxuXSJdLAogICJtYXBwaW5ncyI6ICI7QUFBOFYsU0FBUyxpQkFBaUI7QUFDcFgsU0FBTztBQUFBLElBQ0g7QUFBQSxNQUNJLFFBQVE7QUFBQSxNQUNSLFFBQ0k7QUFBQSxNQUNKLFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLE1BQU07QUFBQSxNQUNOLE9BQU8sQ0FBQyxnQ0FBTztBQUFBLE1BQ2YsU0FBUyxDQUFDLGNBQWM7QUFBQSxNQUN4QixRQUFRLENBQUMsTUFBTTtBQUFBLE1BQ2YsT0FBTztBQUFBLElBQ1g7QUFBQSxJQUNBO0FBQUEsTUFDSSxRQUFRO0FBQUEsTUFDUixRQUNJO0FBQUEsTUFDSixVQUFVO0FBQUEsTUFDVixVQUFVO0FBQUEsTUFDVixNQUFNO0FBQUEsTUFDTixPQUFPLENBQUMsZ0NBQU87QUFBQSxNQUNmLFNBQVMsQ0FBQyxnQkFBZ0IsWUFBWTtBQUFBLE1BQ3RDLFFBQVEsQ0FBQyxNQUFNO0FBQUEsTUFDZixPQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFDSjtBQUVBLElBQU8sZUFBUTtBQUFBO0FBQUEsRUFFWDtBQUFBLElBQ0ksS0FBSztBQUFBO0FBQUEsSUFDTCxRQUFRO0FBQUE7QUFBQSxJQUNSLFVBQVUsQ0FBQyxFQUFDLEtBQUksTUFBTTtBQUVsQixZQUFNLEVBQUMsVUFBVSxTQUFRLElBQUk7QUFFN0IsWUFBTSxZQUFZLGVBQWUsRUFBRTtBQUFBLFFBQy9CLENBQUMsU0FBUyxLQUFLLGFBQWEsWUFBWSxLQUFLLGFBQWE7QUFBQSxNQUM5RDtBQUVBLFVBQUksQ0FBQyxXQUFXO0FBQ1osZUFBTyxFQUFDLE1BQU0sS0FBSyxNQUFNLEVBQUMsU0FBUyx5REFBVyxFQUFDO0FBQUEsTUFDbkQ7QUFFQSxZQUFNLEVBQUMsTUFBSyxJQUFJO0FBQ2hCLGFBQU8sRUFBQyxNQUFNLEtBQUssTUFBTSxFQUFDLE1BQUssRUFBQztBQUFBLElBQ3BDO0FBQUEsRUFDSjtBQUFBO0FBQUEsRUFFQTtBQUFBLElBQ0ksS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLFlBQVk7QUFFbkIsWUFBTSxRQUFRLFFBQVEsUUFBUTtBQUM5QixjQUFRLElBQUksUUFBUSxPQUFPO0FBRTNCLFlBQU0sWUFBWSxlQUFlLEVBQUUsS0FBSyxDQUFDLFNBQVMsS0FBSyxVQUFVLEtBQUs7QUFFdEUsVUFBSSxDQUFDLFdBQVc7QUFDWixlQUFPLEVBQUMsTUFBTSxLQUFLLE1BQU0sRUFBQyxTQUFTLG1EQUFVLEVBQUM7QUFBQSxNQUNsRDtBQUVBLGFBQU8sRUFBQyxNQUFNLEtBQUssTUFBTSxFQUFDLFVBQVMsRUFBQztBQUFBLElBQ3hDO0FBQUEsRUFDSjtBQUNKOyIsCiAgIm5hbWVzIjogW10KfQo=
